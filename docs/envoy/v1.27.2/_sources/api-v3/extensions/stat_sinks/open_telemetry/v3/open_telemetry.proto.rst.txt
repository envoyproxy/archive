.. _envoy_v3_api_file_envoy/extensions/stat_sinks/open_telemetry/v3/open_telemetry.proto:

Open Telemetry Stats Sink (proto)
=================================

.. _extension_envoy.stat_sinks.open_telemetry:

This extension has the qualified name ``envoy.stat_sinks.open_telemetry``


.. note::
  This extension is functional but has not had substantial production burn time,
  use only with this caveat.

  This extension does not operate on the data plane and hence is intended to be robust against untrusted traffic.

.. tip::
  This extension extends and can be used with the following extension category:


  - :ref:`envoy.stats_sinks <extension_category_envoy.stats_sinks>`



  This extension must be configured with one of the following type URLs:



  - :ref:`type.googleapis.com/envoy.extensions.stat_sinks.open_telemetry.v3.SinkConfig <envoy_v3_api_msg_extensions.stat_sinks.open_telemetry.v3.SinkConfig>`



Stats configuration proto schema for ``envoy.stat_sinks.open_telemetry`` sink.




.. _envoy_v3_api_msg_extensions.stat_sinks.open_telemetry.v3.SinkConfig:

extensions.stat_sinks.open_telemetry.v3.SinkConfig
--------------------------------------------------


:repo:`[extensions.stat_sinks.open_telemetry.v3.SinkConfig proto] <api/envoy/extensions/stat_sinks/open_telemetry/v3/open_telemetry.proto#L22>`




.. code-block:: json
  :force:

  {
    "grpc_service": {...},
    "report_counters_as_deltas": ...,
    "report_histograms_as_deltas": ...,
    "emit_tags_as_attributes": {...},
    "use_tag_extracted_name": {...}
  }

.. _envoy_v3_api_field_extensions.stat_sinks.open_telemetry.v3.SinkConfig.grpc_service:


grpc_service
  (:ref:`config.core.v3.GrpcService <envoy_v3_api_msg_config.core.v3.GrpcService>`, *REQUIRED*) The upstream gRPC cluster that implements the OTLP/gRPC collector.


  

.. _envoy_v3_api_field_extensions.stat_sinks.open_telemetry.v3.SinkConfig.report_counters_as_deltas:


report_counters_as_deltas
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) If set to true, counters will be emitted as deltas, and the OTLP message will have
  ``AGGREGATION_TEMPORALITY_DELTA`` set as AggregationTemporality.


.. _envoy_v3_api_field_extensions.stat_sinks.open_telemetry.v3.SinkConfig.report_histograms_as_deltas:


report_histograms_as_deltas
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) If set to true, histograms will be emitted as deltas, and the OTLP message will have
  ``AGGREGATION_TEMPORALITY_DELTA`` set as AggregationTemporality.


.. _envoy_v3_api_field_extensions.stat_sinks.open_telemetry.v3.SinkConfig.emit_tags_as_attributes:


emit_tags_as_attributes
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) If set to true, metrics will have their tags emitted as OTLP attributes, which may
  contain values used by the tag extractor or additional tags added during stats creation.
  Otherwise, no attributes will be associated with the export message. Default value is true.


.. _envoy_v3_api_field_extensions.stat_sinks.open_telemetry.v3.SinkConfig.use_tag_extracted_name:


use_tag_extracted_name
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) If set to true, metric names will be represented as the tag extracted name instead
  of the full metric name. Default value is true.


