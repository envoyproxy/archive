.. _envoy_v3_api_file_envoy/extensions/filters/http/rbac/v3/rbac.proto:

RBAC (proto)
============

.. _extension_envoy.filters.http.rbac:

This extension has the qualified name ``envoy.filters.http.rbac``


.. note::
  

  This extension is intended to be robust against untrusted downstream traffic. It
  assumes that the upstream is trusted.

.. tip::
  This extension extends and can be used with the following extension category:


  - :ref:`envoy.filters.http <extension_category_envoy.filters.http>`



  This extension must be configured with one of the following type URLs:



  - :ref:`type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC <envoy_v3_api_msg_extensions.filters.http.rbac.v3.RBAC>`


  - :ref:`type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBACPerRoute <envoy_v3_api_msg_extensions.filters.http.rbac.v3.RBACPerRoute>`



Role-Based Access Control :ref:`configuration overview <config_http_filters_rbac>`.




.. _envoy_v3_api_msg_extensions.filters.http.rbac.v3.RBAC:

extensions.filters.http.rbac.v3.RBAC
------------------------------------


:repo:`[extensions.filters.http.rbac.v3.RBAC proto] <api/envoy/extensions/filters/http/rbac/v3/rbac.proto#L25>`

RBAC filter config.



.. code-block:: json
  :force:

  {
    "rules": {...},
    "matcher": {...},
    "shadow_rules": {...},
    "shadow_matcher": {...},
    "shadow_rules_stat_prefix": ...
  }

.. _envoy_v3_api_field_extensions.filters.http.rbac.v3.RBAC.rules:


rules
  (:ref:`config.rbac.v3.RBAC <envoy_v3_api_msg_config.rbac.v3.RBAC>`) Specify the RBAC rules to be applied globally.
  If absent, no enforcing RBAC policy will be applied.
  If present and empty, DENY.
  If both rules and matcher are configured, rules will be ignored.


.. _envoy_v3_api_field_extensions.filters.http.rbac.v3.RBAC.matcher:


matcher
  (:ref:`.xds.type.matcher.v3.Matcher <envoy_v3_api_msg_.xds.type.matcher.v3.Matcher>`) The match tree to use when resolving RBAC action for incoming requests. Requests do not
  match any matcher will be denied.
  If absent, no enforcing RBAC matcher will be applied.
  If present and empty, deny all requests.

  .. warning::
     This API feature is currently work-in-progress. API features marked as work-in-progress are not considered stable, are not covered by the :ref:`threat model <arch_overview_threat_model>`, are not supported by the security team, and are subject to breaking changes. Do not use this feature without understanding each of the previous points.



.. _envoy_v3_api_field_extensions.filters.http.rbac.v3.RBAC.shadow_rules:


shadow_rules
  (:ref:`config.rbac.v3.RBAC <envoy_v3_api_msg_config.rbac.v3.RBAC>`) Shadow rules are not enforced by the filter (i.e., returning a 403)
  but will emit stats and logs and can be used for rule testing.
  If absent, no shadow RBAC policy will be applied.
  If both shadow rules and shadow matcher are configured, shadow rules will be ignored.


.. _envoy_v3_api_field_extensions.filters.http.rbac.v3.RBAC.shadow_matcher:


shadow_matcher
  (:ref:`.xds.type.matcher.v3.Matcher <envoy_v3_api_msg_.xds.type.matcher.v3.Matcher>`) The match tree to use for emitting stats and logs which can be used for rule testing for
  incoming requests.
  If absent, no shadow matcher will be applied.

  .. warning::
     This API feature is currently work-in-progress. API features marked as work-in-progress are not considered stable, are not covered by the :ref:`threat model <arch_overview_threat_model>`, are not supported by the security team, and are subject to breaking changes. Do not use this feature without understanding each of the previous points.



.. _envoy_v3_api_field_extensions.filters.http.rbac.v3.RBAC.shadow_rules_stat_prefix:


shadow_rules_stat_prefix
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) If specified, shadow rules will emit stats with the given prefix.
  This is useful to distinguish the stat when there are more than 1 RBAC filter configured with
  shadow rules.



.. _envoy_v3_api_msg_extensions.filters.http.rbac.v3.RBACPerRoute:

extensions.filters.http.rbac.v3.RBACPerRoute
--------------------------------------------


:repo:`[extensions.filters.http.rbac.v3.RBACPerRoute proto] <api/envoy/extensions/filters/http/rbac/v3/rbac.proto#L66>`




.. code-block:: json
  :force:

  {
    "rbac": {...}
  }

.. _envoy_v3_api_field_extensions.filters.http.rbac.v3.RBACPerRoute.rbac:


rbac
  (:ref:`extensions.filters.http.rbac.v3.RBAC <envoy_v3_api_msg_extensions.filters.http.rbac.v3.RBAC>`) Override the global configuration of the filter with this new config.
  If absent, the global RBAC policy will be disabled for this route.


