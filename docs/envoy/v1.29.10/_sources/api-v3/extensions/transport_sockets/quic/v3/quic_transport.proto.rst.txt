.. _envoy_v3_api_file_envoy/extensions/transport_sockets/quic/v3/quic_transport.proto:

quic transport (proto)
======================






.. _envoy_v3_api_msg_extensions.transport_sockets.quic.v3.QuicDownstreamTransport:

extensions.transport_sockets.quic.v3.QuicDownstreamTransport
------------------------------------------------------------


:repo:`[extensions.transport_sockets.quic.v3.QuicDownstreamTransport proto] <api/envoy/extensions/transport_sockets/quic/v3/quic_transport.proto#L21>`

Configuration for Downstream QUIC transport socket. This provides Google's implementation of Google QUIC and IETF QUIC to Envoy.



.. code-block:: json
  :force:

  {
    "downstream_tls_context": {...},
    "enable_early_data": {...}
  }

.. _envoy_v3_api_field_extensions.transport_sockets.quic.v3.QuicDownstreamTransport.downstream_tls_context:


downstream_tls_context
  (:ref:`extensions.transport_sockets.tls.v3.DownstreamTlsContext <envoy_v3_api_msg_extensions.transport_sockets.tls.v3.DownstreamTlsContext>`, *REQUIRED*) 

.. _envoy_v3_api_field_extensions.transport_sockets.quic.v3.QuicDownstreamTransport.enable_early_data:


enable_early_data
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) If false, QUIC will tell TLS to reject any early data and to stop issuing 0-RTT credentials with resumption session tickets. This will prevent clients from sending 0-RTT requests.
  Default to true.



.. _envoy_v3_api_msg_extensions.transport_sockets.quic.v3.QuicUpstreamTransport:

extensions.transport_sockets.quic.v3.QuicUpstreamTransport
----------------------------------------------------------


:repo:`[extensions.transport_sockets.quic.v3.QuicUpstreamTransport proto] <api/envoy/extensions/transport_sockets/quic/v3/quic_transport.proto#L31>`

Configuration for Upstream QUIC transport socket. This provides Google's implementation of Google QUIC and IETF QUIC to Envoy.



.. code-block:: json
  :force:

  {
    "upstream_tls_context": {...}
  }

.. _envoy_v3_api_field_extensions.transport_sockets.quic.v3.QuicUpstreamTransport.upstream_tls_context:


upstream_tls_context
  (:ref:`extensions.transport_sockets.tls.v3.UpstreamTlsContext <envoy_v3_api_msg_extensions.transport_sockets.tls.v3.UpstreamTlsContext>`, *REQUIRED*) 

