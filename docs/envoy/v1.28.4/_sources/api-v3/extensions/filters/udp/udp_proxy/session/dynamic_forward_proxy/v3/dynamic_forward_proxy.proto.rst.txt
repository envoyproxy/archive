.. _envoy_v3_api_file_envoy/extensions/filters/udp/udp_proxy/session/dynamic_forward_proxy/v3/dynamic_forward_proxy.proto:

Filter state dynamic forward proxy (proto)
==========================================






.. _envoy_v3_api_msg_extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig:

extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig
------------------------------------------------------------------------------


:repo:`[extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig proto] <api/envoy/extensions/filters/udp/udp_proxy/session/dynamic_forward_proxy/v3/dynamic_forward_proxy.proto#L25>`

Configuration for the filter state based dynamic forward proxy filter. See the
:ref:`architecture overview <arch_overview_http_dynamic_forward_proxy>` for
more information. Note this filter must be used in conjunction to another filter that
sets the 'envoy.upstream.dynamic_host' and the 'envoy.upstream.dynamic_port' filter
state keys for the required upstream UDP session.

.. _extension_envoy.filters.udp.session.dynamic_forward_proxy:

This extension has the qualified name ``envoy.filters.udp.session.dynamic_forward_proxy``


.. note::
  This extension is functional but has not had substantial production burn time,
  use only with this caveat.

  This extension is intended to be robust against untrusted downstream traffic. It
  assumes that the upstream is trusted.

.. tip::
  This extension extends and can be used with the following extension category:


  - :ref:`envoy.filters.udp.session <extension_category_envoy.filters.udp.session>`



  This extension must be configured with one of the following type URLs:



  - :ref:`type.googleapis.com/envoy.extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig <envoy_v3_api_msg_extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig>`




.. code-block:: json
  :force:

  {
    "stat_prefix": ...,
    "dns_cache_config": {...},
    "buffer_options": {...}
  }

.. _envoy_v3_api_field_extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig.stat_prefix:


stat_prefix
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The prefix to use when emitting :ref:`statistics <config_udp_session_filters_dynamic_forward_proxy_stats>`.


.. _envoy_v3_api_field_extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig.dns_cache_config:


dns_cache_config
  (:ref:`extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig <envoy_v3_api_msg_extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig>`, *REQUIRED*) The DNS cache configuration that the filter will attach to. Note this
  configuration must match that of associated :ref:`dynamic forward proxy cluster configuration
  <envoy_v3_api_field_extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig.dns_cache_config>`.


  

.. _envoy_v3_api_field_extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig.buffer_options:


buffer_options
  (:ref:`extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig.BufferOptions <envoy_v3_api_msg_extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig.BufferOptions>`) If configured, the filter will buffer datagrams in case that it is waiting for a DNS response.
  If this field is not configured, there will be no buffering and downstream datagrams that arrive
  while the DNS resolution is in progress will be dropped. In case this field is set but the options
  are not configured, the default values will be applied as described in the ``BufferOptions``.


.. _envoy_v3_api_msg_extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig.BufferOptions:

extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig.BufferOptions
--------------------------------------------------------------------------------------------


:repo:`[extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig.BufferOptions proto] <api/envoy/extensions/filters/udp/udp_proxy/session/dynamic_forward_proxy/v3/dynamic_forward_proxy.proto#L27>`

Configuration for UDP datagrams buffering.



.. code-block:: json
  :force:

  {
    "max_buffered_datagrams": {...},
    "max_buffered_bytes": {...}
  }

.. _envoy_v3_api_field_extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig.BufferOptions.max_buffered_datagrams:


max_buffered_datagrams
  (`UInt32Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint32value>`_) If set, the filter will only buffer datagrams up to the requested limit, and will drop
  new UDP datagrams if the buffer contains the max_buffered_datagrams value at the time
  of a new datagram arrival. If not set, the default value is 1024 datagrams.


.. _envoy_v3_api_field_extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig.BufferOptions.max_buffered_bytes:


max_buffered_bytes
  (`UInt64Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint64value>`_) If set, the filter will only buffer datagrams up to the requested total buffered bytes limit,
  and will drop new UDP datagrams if the buffer contains the max_buffered_datagrams value
  at the time of a new datagram arrival. If not set, the default value is 16,384 (16KB).



