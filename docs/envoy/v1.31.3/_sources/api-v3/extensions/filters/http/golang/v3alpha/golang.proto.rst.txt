.. _envoy_v3_api_file_contrib/envoy/extensions/filters/http/golang/v3alpha/golang.proto:

Golang HTTP filter (proto)
==========================

.. _extension_envoy.filters.http.golang:

This extension has the qualified name ``envoy.filters.http.golang``

.. note::

  This extension is only available in :ref:`contrib <install_contrib>` images.

.. note::
  This extension is functional but has not had substantial production burn time,
  use only with this caveat.

  This extension is not hardened and should only be used in deployments
  where both the downstream and upstream are trusted.

.. tip::
  This extension extends and can be used with the following extension category:


  - :ref:`envoy.filters.http <extension_category_envoy.filters.http>`





.. warning::
   This API feature is currently work-in-progress. API features marked as work-in-progress are not considered stable, are not covered by the :ref:`threat model <arch_overview_threat_model>`, are not supported by the security team, and are subject to breaking changes. Do not use this feature without understanding each of the previous points.




For an overview of the Golang HTTP filter please see the :ref:`configuration reference documentation <config_http_filters_golang>`.




.. _envoy_v3_api_msg_extensions.filters.http.golang.v3alpha.Config:

extensions.filters.http.golang.v3alpha.Config
---------------------------------------------


:repo:`[extensions.filters.http.golang.v3alpha.Config proto] <api/contrib/envoy/extensions/filters/http/golang/v3alpha/golang.proto#L24>`




.. code-block:: json
  :force:

  {
    "library_id": ...,
    "library_path": ...,
    "plugin_name": ...,
    "plugin_config": {...}
  }

.. _envoy_v3_api_field_extensions.filters.http.golang.v3alpha.Config.library_id:


library_id
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) Globally unique ID for a dynamic library file.


.. _envoy_v3_api_field_extensions.filters.http.golang.v3alpha.Config.library_path:


library_path
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) Path to a dynamic library implementing the
  :repo:`StreamFilter API <contrib/golang/common/go/api.StreamFilter>`
  interface.


.. _envoy_v3_api_field_extensions.filters.http.golang.v3alpha.Config.plugin_name:


plugin_name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) Globally unique name of the Go plugin.

  This name **must** be consistent with the name registered in ``http::RegisterHttpFilterConfigFactory``,
  and can be used to associate :ref:`route and virtualHost plugin configuration
  <envoy_v3_api_field_extensions.filters.http.golang.v3alpha.ConfigsPerRoute.plugins_config>`.



.. _envoy_v3_api_field_extensions.filters.http.golang.v3alpha.Config.plugin_config:


plugin_config
  (`Any <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#any>`_) Configuration for the Go plugin.

  .. note::
      This configuration is only parsed in the go plugin, and is therefore not validated
      by Envoy.

      See the :repo:`StreamFilter API <contrib/golang/common/go/api/filter.go>`
      for more information about how the plugin's configuration data can be accessed.






.. _envoy_v3_api_msg_extensions.filters.http.golang.v3alpha.RouterPlugin:

extensions.filters.http.golang.v3alpha.RouterPlugin
---------------------------------------------------


:repo:`[extensions.filters.http.golang.v3alpha.RouterPlugin proto] <api/contrib/envoy/extensions/filters/http/golang/v3alpha/golang.proto#L78>`




.. code-block:: json
  :force:

  {
    "config": {...}
  }

.. _envoy_v3_api_field_extensions.filters.http.golang.v3alpha.RouterPlugin.config:


config
  (`Any <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#any>`_, *REQUIRED*) The config field is used for setting per-route and per-virtualhost plugin config.


  


.. _envoy_v3_api_msg_extensions.filters.http.golang.v3alpha.ConfigsPerRoute:

extensions.filters.http.golang.v3alpha.ConfigsPerRoute
------------------------------------------------------


:repo:`[extensions.filters.http.golang.v3alpha.ConfigsPerRoute proto] <api/contrib/envoy/extensions/filters/http/golang/v3alpha/golang.proto#L92>`




.. code-block:: json
  :force:

  {
    "plugins_config": {...}
  }

.. _envoy_v3_api_field_extensions.filters.http.golang.v3alpha.ConfigsPerRoute.plugins_config:


plugins_config
  (**repeated** map<`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, :ref:`extensions.filters.http.golang.v3alpha.RouterPlugin <envoy_v3_api_msg_extensions.filters.http.golang.v3alpha.RouterPlugin>`>) Configuration of the Go plugin at the per-router or per-virtualhost level,
  keyed on the :ref:`plugin_name <envoy_v3_api_field_extensions.filters.http.golang.v3alpha.Config.plugin_name>`
  of the Go plugin.





