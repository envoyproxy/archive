.. _envoy_v3_api_file_xds/type/matcher/v3/cel.proto:

Common Expression Language (CEL) matchers (proto)
=================================================


.. warning::
   This API feature is currently work-in-progress. API features marked as work-in-progress are not considered stable, are not covered by the :ref:`threat model <arch_overview_threat_model>`, are not supported by the security team, and are subject to breaking changes. Do not use this feature without understanding each of the previous points.







.. _envoy_v3_api_msg_.xds.type.matcher.v3.CelMatcher:

.xds.type.matcher.v3.CelMatcher
-------------------------------


`[.xds.type.matcher.v3.CelMatcher proto] <https://github.com/cncf/xds/blob/main/xds/type/matcher/v3/cel.proto#L34>`_

Performs a match by evaluating a `Common Expression Language
<https://github.com/google/cel-spec>`_ (CEL) expression against the standardized set of
:ref:`HTTP attributes <arch_overview_attributes>` specified via ``HttpAttributesCelMatchInput``.

.. attention::

  The match is ``true``, iff the result of the evaluation is a bool AND true.
  In all other cases, the match is ``false``, including but not limited to: non-bool types,
  ``false``, ``null``,`` int(1)``, etc.
  In case CEL expression raises an error, the result of the evaluation is interpreted "no match".

Refer to :ref:`Unified Matcher API <envoy_v3_api_msg_.xds.type.matcher.v3.Matcher>` documentation
for usage details.




.. code-block:: json
  :force:

  {
    "expr_match": {...}
  }

.. _envoy_v3_api_field_.xds.type.matcher.v3.CelMatcher.expr_match:


expr_match
  (:ref:`.xds.type.v3.CelExpression <envoy_v3_api_msg_.xds.type.v3.CelExpression>`, *REQUIRED*) Either parsed or checked representation of the CEL program.


