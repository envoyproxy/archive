.. _envoy_v3_api_file_envoy/extensions/transport_sockets/http_11_proxy/v3/upstream_http_11_connect.proto:

Upstream HTTP/1.1 Proxy (proto)
===============================

.. _extension_envoy.transport_sockets.http_11_proxy:

This extension has the qualified name ``envoy.transport_sockets.http_11_proxy``


.. note::
  This extension is functional but has not had substantial production burn time,
  use only with this caveat.

  This extension has an unknown security posture and should only be
  used in deployments where both the downstream and upstream are
  trusted.

.. tip::
  This extension extends and can be used with the following extension category:


  - :ref:`envoy.transport_sockets.upstream <extension_category_envoy.transport_sockets.upstream>`



  This extension must be configured with one of the following type URLs:



  - :ref:`type.googleapis.com/envoy.extensions.transport_sockets.http_11_proxy.v3.Http11ProxyUpstreamTransport <envoy_v3_api_msg_extensions.transport_sockets.http_11_proxy.v3.Http11ProxyUpstreamTransport>`







.. _envoy_v3_api_msg_extensions.transport_sockets.http_11_proxy.v3.Http11ProxyUpstreamTransport:

extensions.transport_sockets.http_11_proxy.v3.Http11ProxyUpstreamTransport
--------------------------------------------------------------------------


:repo:`[extensions.transport_sockets.http_11_proxy.v3.Http11ProxyUpstreamTransport proto] <api/envoy/extensions/transport_sockets/http_11_proxy/v3/upstream_http_11_connect.proto#L32>`

Configuration for HTTP/1.1 proxy transport sockets.
This is intended for use in Envoy Mobile, though may eventually be extended
for upstream Envoy use.
If this transport socket is configured, and an intermediate filter adds the
stream info necessary for proxying to the stream info (as the test filter
does :repo:`here <test/integration/filters/header_to_proxy_filter.cc>`) then

* Upstream connections will be directed to the specified proxy address rather
  than the host's address
* Upstream TLS connections will have a raw HTTP/1.1 CONNECT header prefaced
  to the payload, and 200 response stripped (if less than 200 bytes)
* Plaintext HTTP/1.1 connections will be sent with a fully qualified URL.

This transport socket is not compatible with HTTP/3, plaintext HTTP/2, or raw TCP.



.. code-block:: json
  :force:

  {
    "transport_socket": {...}
  }

.. _envoy_v3_api_field_extensions.transport_sockets.http_11_proxy.v3.Http11ProxyUpstreamTransport.transport_socket:


transport_socket
  (:ref:`config.core.v3.TransportSocket <envoy_v3_api_msg_config.core.v3.TransportSocket>`, *REQUIRED*) The underlying transport socket being wrapped.


