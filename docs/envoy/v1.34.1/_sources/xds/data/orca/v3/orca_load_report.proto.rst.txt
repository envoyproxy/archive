.. _envoy_v3_api_file_xds/data/orca/v3/orca_load_report.proto:

xds/data/orca/v3/orca_load_report.proto (proto)
===============================================


See section `ORCA load report format` of the design document in
https://github.com/envoyproxy/envoy/issues/6614.




.. _envoy_v3_api_msg_.xds.data.orca.v3.OrcaLoadReport:

.xds.data.orca.v3.OrcaLoadReport
--------------------------------


`[.xds.data.orca.v3.OrcaLoadReport proto] <https://github.com/cncf/xds/blob/main/xds/data/orca/v3/orca_load_report.proto#L14>`_




.. code-block:: json
  :force:

  {
    "cpu_utilization": ...,
    "mem_utilization": ...,
    "rps": ...,
    "request_cost": {...},
    "utilization": {...},
    "rps_fractional": ...,
    "eps": ...,
    "named_metrics": {...},
    "application_utilization": ...
  }

.. _envoy_v3_api_field_.xds.data.orca.v3.OrcaLoadReport.cpu_utilization:


cpu_utilization
  (`double <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) CPU utilization expressed as a fraction of available CPU resources. This
  should be derived from the latest sample or measurement. The value may be
  larger than 1.0 when the usage exceeds the reporter dependent notion of
  soft limits.


.. _envoy_v3_api_field_.xds.data.orca.v3.OrcaLoadReport.mem_utilization:


mem_utilization
  (`double <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Memory utilization expressed as a fraction of available memory
  resources. This should be derived from the latest sample or measurement.


.. _envoy_v3_api_field_.xds.data.orca.v3.OrcaLoadReport.rps:


rps
  (`uint64 <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Total RPS being served by an endpoint. This should cover all services that an endpoint is
  responsible for.
  Deprecated -- use ``rps_fractional`` field instead.


.. _envoy_v3_api_field_.xds.data.orca.v3.OrcaLoadReport.request_cost:


request_cost
  (**repeated** map<`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, `double <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_>) Application specific requests costs. Each value is an absolute cost (e.g. 3487 bytes of
  storage) associated with the request.


.. _envoy_v3_api_field_.xds.data.orca.v3.OrcaLoadReport.utilization:


utilization
  (**repeated** map<`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, `double <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_>) Resource utilization values. Each value is expressed as a fraction of total resources
  available, derived from the latest sample or measurement.


.. _envoy_v3_api_field_.xds.data.orca.v3.OrcaLoadReport.rps_fractional:


rps_fractional
  (`double <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Total RPS being served by an endpoint. This should cover all services that an endpoint is
  responsible for.


.. _envoy_v3_api_field_.xds.data.orca.v3.OrcaLoadReport.eps:


eps
  (`double <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Total EPS (errors/second) being served by an endpoint. This should cover
  all services that an endpoint is responsible for.


.. _envoy_v3_api_field_.xds.data.orca.v3.OrcaLoadReport.named_metrics:


named_metrics
  (**repeated** map<`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, `double <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_>) Application specific opaque metrics.


.. _envoy_v3_api_field_.xds.data.orca.v3.OrcaLoadReport.application_utilization:


application_utilization
  (`double <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Application specific utilization expressed as a fraction of available
  resources. For example, an application may report the max of CPU and memory
  utilization for better load balancing if it is both CPU and memory bound.
  This should be derived from the latest sample or measurement.
  The value may be larger than 1.0 when the usage exceeds the reporter
  dependent notion of soft limits.








