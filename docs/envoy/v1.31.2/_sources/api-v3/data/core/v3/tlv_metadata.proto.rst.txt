.. _envoy_v3_api_file_envoy/data/core/v3/tlv_metadata.proto:

Proxy Protocol Filter Typed Metadata (proto)
============================================


PROXY protocol filter typed metadata.




.. _envoy_v3_api_msg_data.core.v3.TlvsMetadata:

data.core.v3.TlvsMetadata
-------------------------


:repo:`[data.core.v3.TlvsMetadata proto] <api/envoy/data/core/v3/tlv_metadata.proto#L15>`




.. code-block:: json
  :force:

  {
    "typed_metadata": {...}
  }

.. _envoy_v3_api_field_data.core.v3.TlvsMetadata.typed_metadata:


typed_metadata
  (**repeated** map<`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, `bytes <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_>) Typed metadata for :ref:`Proxy protocol filter <envoy_v3_api_msg_extensions.filters.listener.proxy_protocol.v3.ProxyProtocol>`, that represents a map of TLVs.
  Each entry in the map consists of a key which corresponds to a configured
  :ref:`rule key <envoy_v3_api_field_extensions.filters.listener.proxy_protocol.v3.ProxyProtocol.KeyValuePair.key>` and a value (TLV value in bytes).
  When runtime flag ``envoy.reloadable_features.use_typed_metadata_in_proxy_protocol_listener`` is enabled,
  :ref:`Proxy protocol filter <envoy_v3_api_msg_extensions.filters.listener.proxy_protocol.v3.ProxyProtocol>`
  will populate typed metadata and regular metadata. By default filter will populate typed and untyped metadata.




