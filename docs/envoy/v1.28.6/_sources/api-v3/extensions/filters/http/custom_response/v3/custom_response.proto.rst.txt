.. _envoy_v3_api_file_envoy/extensions/filters/http/custom_response/v3/custom_response.proto:

Custom Response Filter (proto)
==============================

.. _extension_envoy.filters.http.custom_response:

This extension has the qualified name ``envoy.filters.http.custom_response``


.. note::
  This extension is work-in-progress. Functionality is incomplete and it is not intended for production use.

  This extension has an unknown security posture and should only be
  used in deployments where both the downstream and upstream are
  trusted.

.. tip::
  This extension extends and can be used with the following extension category:


  - :ref:`envoy.filters.http <extension_category_envoy.filters.http>`



  This extension must be configured with one of the following type URLs:



  - :ref:`type.googleapis.com/envoy.extensions.filters.http.custom_response.v3.CustomResponse <envoy_v3_api_msg_extensions.filters.http.custom_response.v3.CustomResponse>`



.. warning::
   This API feature is currently work-in-progress. API features marked as work-in-progress are not considered stable, are not covered by the :ref:`threat model <arch_overview_threat_model>`, are not supported by the security team, and are subject to breaking changes. Do not use this feature without understanding each of the previous points.





The Custom Response Filter allows for replacing upstream responses.




.. _envoy_v3_api_msg_extensions.filters.http.custom_response.v3.CustomResponse:

extensions.filters.http.custom_response.v3.CustomResponse
---------------------------------------------------------


:repo:`[extensions.filters.http.custom_response.v3.CustomResponse proto] <api/envoy/extensions/filters/http/custom_response/v3/custom_response.proto#L25>`

The filter configuration is a collection of custom response
policies in a matcher tree. The configuration can be defined at the filter,
virtual host or route level. The response will be matched against the most
specific to the least specific config, till a match is found.



.. code-block:: json
  :force:

  {
    "custom_response_matcher": {...}
  }

.. _envoy_v3_api_field_extensions.filters.http.custom_response.v3.CustomResponse.custom_response_matcher:


custom_response_matcher
  (:ref:`.xds.type.matcher.v3.Matcher <envoy_v3_api_msg_.xds.type.matcher.v3.Matcher>`) Matcher to match against the original response to select a
  :ref:`Custom Response Policy <extension_category_envoy.http.custom_response>`
  that will override the original response. The matching is done by matching
  against :ref:`response header values<extension_category_envoy.matching.http.input>`
  Example:

  .. validated-code-block:: yaml
    :type-name: xds.type.matcher.v3.Matcher

    matcher_list:
      matchers:
        # Apply a locally stored custom response to any 4xx response.
      - predicate:
          single_predicate:
            input:
              name: 4xx_response
              typed_config:
                "@type": type.googleapis.com/envoy.type.matcher.v3.HttpResponseStatusCodeClassMatchInput
            value_match:
              exact: "4xx"
        on_match:
          action:
            name: action
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.http.custom_response.local_response_policy.v3.LocalResponsePolicy
              status_code: 499
              body:
                inline_string: "not allowed"
              body_format:
                json_format:
                  status: "%RESPONSE_CODE%"
                  message: "%LOCAL_REPLY_BODY%"
              response_headers_to_add:
              - header:
                  key: "foo"
                  value: "x-bar"
        # Redirect to different upstream if the status code is one of 502, 503 or 504.
      - predicate:
          or_matcher:
            predicate:
            - single_predicate:
                input:
                  name: "502_response"
                  typed_config:
                    "@type": type.googleapis.com/envoy.type.matcher.v3.HttpResponseStatusCodeMatchInput
                value_match:
                  exact: "502"
            - single_predicate:
                input:
                  name: "503_response"
                  typed_config:
                    "@type": type.googleapis.com/envoy.type.matcher.v3.HttpResponseStatusCodeMatchInput
                value_match:
                  exact: "503"
            - single_predicate:
                input:
                  name: "504_response"
                  typed_config:
                    "@type": type.googleapis.com/envoy.type.matcher.v3.HttpResponseStatusCodeMatchInput
                value_match:
                  exact: "504"
        on_match:
          action:
            name: action
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.http.custom_response.redirect_policy.v3.RedirectPolicy
              status_code: 299
              uri: "https://foo.example/gateway_error"
              response_headers_to_add:
              - header:
                  key: "foo2"
                  value: "x-bar2"

  -- attention::
   The first matched policy wins. Once the response is matched, matcher
   evaluations end.

  Refer to :ref:`Unified Matcher API <envoy_v3_api_msg_.xds.type.matcher.v3.Matcher>`
  documentation for more information on the matcher trees.


  .. _extension_category_envoy.http.custom_response:

  .. tip::

    This extension category has the following known extensions:


    - :ref:`envoy.http.custom_response.local_response_policy <extension_envoy.http.custom_response.local_response_policy>`

    - :ref:`envoy.http.custom_response.redirect_policy <extension_envoy.http.custom_response.redirect_policy>`





