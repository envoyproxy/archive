.. _envoy_v3_api_file_envoy/extensions/filters/http/gcp_authn/v3/gcp_authn.proto:

GCP authentication (proto)
==========================

.. _extension_envoy.filters.http.gcp_authn:

This extension has the qualified name ``envoy.filters.http.gcp_authn``


.. note::
  This extension is functional but has not had substantial production burn time,
  use only with this caveat.

  This extension has an unknown security posture and should only be
  used in deployments where both the downstream and upstream are
  trusted.

.. tip::
  This extension extends and can be used with the following extension category:


  - :ref:`envoy.filters.http <extension_category_envoy.filters.http>`



  This extension must be configured with one of the following type URLs:



  - :ref:`type.googleapis.com/envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig <envoy_v3_api_msg_extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig>`



GCP authentication :ref:`configuration overview <config_http_filters_gcp_authn>`.




.. _envoy_v3_api_msg_extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig:

extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig
---------------------------------------------------------


:repo:`[extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig proto] <api/envoy/extensions/filters/http/gcp_authn/v3/gcp_authn.proto#L26>`

Filter configuration.



.. code-block:: json
  :force:

  {
    "http_uri": {...},
    "retry_policy": {...},
    "cache_config": {...},
    "token_header": {...},
    "cluster": ...,
    "timeout": {...}
  }

.. _envoy_v3_api_field_extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.http_uri:


http_uri
  (:ref:`config.core.v3.HttpUri <envoy_v3_api_msg_config.core.v3.HttpUri>`) The HTTP URI to fetch tokens from GCE Metadata Server(https://cloud.google.com/compute/docs/metadata/overview).
  The URL format is "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=[AUDIENCE]"

  This field is deprecated because it does not match the API surface provided by the google auth libraries.
  Control planes should not attempt to override the metadata server URI.
  The cluster and timeout can be configured using the ``cluster`` and ``timeout`` fields instead.
  For backward compatibility, the cluster and timeout configured in this field will be used
  if the new ``cluster`` and ``timeout`` fields are not set.


.. _envoy_v3_api_field_extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.retry_policy:


retry_policy
  (:ref:`config.core.v3.RetryPolicy <envoy_v3_api_msg_config.core.v3.RetryPolicy>`) Retry policy for fetching tokens.
  Not supported by all data planes.


.. _envoy_v3_api_field_extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.cache_config:


cache_config
  (:ref:`extensions.filters.http.gcp_authn.v3.TokenCacheConfig <envoy_v3_api_msg_extensions.filters.http.gcp_authn.v3.TokenCacheConfig>`) Token cache configuration. This field is optional.


.. _envoy_v3_api_field_extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.token_header:


token_header
  (:ref:`extensions.filters.http.gcp_authn.v3.TokenHeader <envoy_v3_api_msg_extensions.filters.http.gcp_authn.v3.TokenHeader>`) Request header location to extract the token. By default (i.e. if this field is not specified), the token
  is extracted to the Authorization HTTP header, in the format "Authorization: Bearer <token>".
  Not supported by all data planes.


.. _envoy_v3_api_field_extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.cluster:


cluster
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Cluster to send traffic to the GCE metadata server. Not supported
  by all data planes; a data plane may instead have its own mechanism
  for contacting the metadata server.


.. _envoy_v3_api_field_extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig.timeout:


timeout
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) Timeout for fetching the tokens from the GCE metadata server.
  Not supported by all data planes.



.. _envoy_v3_api_msg_extensions.filters.http.gcp_authn.v3.Audience:

extensions.filters.http.gcp_authn.v3.Audience
---------------------------------------------


:repo:`[extensions.filters.http.gcp_authn.v3.Audience proto] <api/envoy/extensions/filters/http/gcp_authn/v3/gcp_authn.proto#L65>`

Audience is the URL of the receiving service that performs token authentication.
It will be provided to the filter through cluster's typed_filter_metadata.



.. code-block:: json
  :force:

  {
    "url": ...
  }

.. _envoy_v3_api_field_extensions.filters.http.gcp_authn.v3.Audience.url:


url
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) 


.. _envoy_v3_api_msg_extensions.filters.http.gcp_authn.v3.TokenCacheConfig:

extensions.filters.http.gcp_authn.v3.TokenCacheConfig
-----------------------------------------------------


:repo:`[extensions.filters.http.gcp_authn.v3.TokenCacheConfig proto] <api/envoy/extensions/filters/http/gcp_authn/v3/gcp_authn.proto#L70>`

Token Cache configuration.



.. code-block:: json
  :force:

  {
    "cache_size": {...}
  }

.. _envoy_v3_api_field_extensions.filters.http.gcp_authn.v3.TokenCacheConfig.cache_size:


cache_size
  (`UInt64Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint64value>`_) The number of cache entries. The maximum number of entries is INT64_MAX as it is constrained by underlying cache implementation.
  Default value 0 (i.e., proto3 defaults) disables the cache by default. Other default values will enable the cache.



.. _envoy_v3_api_msg_extensions.filters.http.gcp_authn.v3.TokenHeader:

extensions.filters.http.gcp_authn.v3.TokenHeader
------------------------------------------------


:repo:`[extensions.filters.http.gcp_authn.v3.TokenHeader proto] <api/envoy/extensions/filters/http/gcp_authn/v3/gcp_authn.proto#L76>`




.. code-block:: json
  :force:

  {
    "name": ...,
    "value_prefix": ...
  }

.. _envoy_v3_api_field_extensions.filters.http.gcp_authn.v3.TokenHeader.name:


name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The HTTP header's name.


.. _envoy_v3_api_field_extensions.filters.http.gcp_authn.v3.TokenHeader.value_prefix:


value_prefix
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The header's prefix. The format is "value_prefix<token>"
  For example, for "Authorization: Bearer <token>", value_prefix="Bearer " with a space at the
  end.


