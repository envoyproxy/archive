.. _envoy_v3_api_file_envoy/extensions/filters/network/generic_proxy/codecs/http1/v3/http1.proto:

HTTP1 codec configuration for Generic Proxy (proto)
===================================================

.. _extension_envoy.generic_proxy.codecs.http1:

This extension has the qualified name ``envoy.generic_proxy.codecs.http1``


.. note::
  This extension is functional but has not had substantial production burn time,
  use only with this caveat.

  This extension is not hardened and should only be used in deployments
  where both the downstream and upstream are trusted.

.. tip::
  This extension extends and can be used with the following extension category:


  - :ref:`envoy.generic_proxy.codecs <extension_category_envoy.generic_proxy.codecs>`



  This extension must be configured with one of the following type URLs:



  - :ref:`type.googleapis.com/envoy.extensions.filters.network.generic_proxy.codecs.http1.v3.Http1CodecConfig <envoy_v3_api_msg_extensions.filters.network.generic_proxy.codecs.http1.v3.Http1CodecConfig>`



.. warning::
   This API feature is currently work-in-progress. API features marked as work-in-progress are not considered stable, are not covered by the :ref:`threat model <arch_overview_threat_model>`, are not supported by the security team, and are subject to breaking changes. Do not use this feature without understanding each of the previous points.







.. _envoy_v3_api_msg_extensions.filters.network.generic_proxy.codecs.http1.v3.Http1CodecConfig:

extensions.filters.network.generic_proxy.codecs.http1.v3.Http1CodecConfig
-------------------------------------------------------------------------


:repo:`[extensions.filters.network.generic_proxy.codecs.http1.v3.Http1CodecConfig proto] <api/envoy/extensions/filters/network/generic_proxy/codecs/http1/v3/http1.proto#L29>`

Configuration for HTTP codec. This HTTP1 codec is used to parse and serialize HTTP1 messages
for the generic proxy filter.
Any decoding error will result in the generic proxy closing the connection.

.. note::
  This codec only supports HTTP1.1 messages and does not support HTTP1.0 messages. And it limits
  part of the HTTP1.1 features, such as upgrade, connect, etc.
  This codec is mainly designed for the features evaluation of the generic proxy filter. Please
  be cautious when using it in production.



.. code-block:: json
  :force:

  {
    "single_frame_mode": {...},
    "max_buffer_size": {...}
  }

.. _envoy_v3_api_field_extensions.filters.network.generic_proxy.codecs.http1.v3.Http1CodecConfig.single_frame_mode:


single_frame_mode
  (`BoolValue <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#boolvalue>`_) If true, the codec will parse and serialize HTTP1 messages in a single frame per message.

  A frame is a minimal unit of data that can be processed by the generic proxy. If false, the
  codec will parse and serialize HTTP1 messages in a streaming way. In this case, the codec
  will output multiple frames for a single HTTP1 message to the generic proxy.
  If true, the codec will buffer the entire HTTP1 message body before sending it to the generic
  proxy. This may have better performance in small message scenarios and is more friendly to
  handle the HTTP1 message body. This also may result in higher memory usage and latency if
  the message body is large.

  Default is true.


.. _envoy_v3_api_field_extensions.filters.network.generic_proxy.codecs.http1.v3.Http1CodecConfig.max_buffer_size:


max_buffer_size
  (`UInt32Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint32value>`_) The maximum size of the HTTP1 message body in bytes. If not set, 8*1024*1024 (8MB) is used.
  This only makes sense when single_frame_mode is true.
  If the HTTP1 message body size exceeds this value, this will result in a decoding error
  and the generic proxy will close the connection.


