.. _envoy_v3_api_file_envoy/config/trace/v3/datadog.proto:

Datadog tracer (proto)
======================






.. _envoy_v3_api_msg_config.trace.v3.DatadogRemoteConfig:

config.trace.v3.DatadogRemoteConfig
-----------------------------------


:repo:`[config.trace.v3.DatadogRemoteConfig proto] <api/envoy/config/trace/v3/datadog.proto#L21>`

Configuration for the Remote Configuration feature.



.. code-block:: json
  :force:

  {
    "polling_interval": {...}
  }

.. _envoy_v3_api_field_config.trace.v3.DatadogRemoteConfig.polling_interval:


polling_interval
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) Frequency at which new configuration updates are queried.
  If no value is provided, the default value is delegated to the Datadog tracing library.



.. _envoy_v3_api_msg_config.trace.v3.DatadogConfig:

config.trace.v3.DatadogConfig
-----------------------------


:repo:`[config.trace.v3.DatadogConfig proto] <api/envoy/config/trace/v3/datadog.proto#L29>`

Configuration for the Datadog tracer.

.. _extension_envoy.tracers.datadog:

This extension has the qualified name ``envoy.tracers.datadog``


.. note::
  

  This extension is intended to be robust against untrusted downstream traffic. It
  assumes that the upstream is trusted.

.. tip::
  This extension extends and can be used with the following extension category:


  - :ref:`envoy.tracers <extension_category_envoy.tracers>`



  This extension must be configured with one of the following type URLs:



  - :ref:`type.googleapis.com/envoy.config.trace.v3.DatadogConfig <envoy_v3_api_msg_config.trace.v3.DatadogConfig>`




.. code-block:: json
  :force:

  {
    "collector_cluster": ...,
    "service_name": ...,
    "collector_hostname": ...,
    "remote_config": {...}
  }

.. _envoy_v3_api_field_config.trace.v3.DatadogConfig.collector_cluster:


collector_cluster
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The cluster to use for submitting traces to the Datadog agent.


.. _envoy_v3_api_field_config.trace.v3.DatadogConfig.service_name:


service_name
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) The name used for the service when traces are generated by envoy.


.. _envoy_v3_api_field_config.trace.v3.DatadogConfig.collector_hostname:


collector_hostname
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
  that require a specific hostname. Defaults to :ref:`collector_cluster <envoy_v3_api_field_config.trace.v3.DatadogConfig.collector_cluster>` above.


.. _envoy_v3_api_field_config.trace.v3.DatadogConfig.remote_config:


remote_config
  (:ref:`config.trace.v3.DatadogRemoteConfig <envoy_v3_api_msg_config.trace.v3.DatadogRemoteConfig>`) Enables and configures remote configuration.
  Remote Configuration allows to configure the tracer from Datadog's user interface.
  This feature can drastically increase the number of connections to the Datadog Agent.
  Each tracer regularly polls for configuration updates, and the number of tracers is the product
  of the number of listeners and worker threads.


