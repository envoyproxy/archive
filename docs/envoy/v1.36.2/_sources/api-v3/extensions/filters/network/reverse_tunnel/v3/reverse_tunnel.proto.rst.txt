.. _envoy_v3_api_file_envoy/extensions/filters/network/reverse_tunnel/v3/reverse_tunnel.proto:

Reverse Tunnel Network Filter (proto)
=====================================

.. _extension_envoy.filters.network.reverse_tunnel:

This extension has the qualified name ``envoy.filters.network.reverse_tunnel``


.. note::
  This extension is functional but has not had substantial production burn time,
  use only with this caveat.

  This extension has an unknown security posture and should only be
  used in deployments where both the downstream and upstream are
  trusted.

.. tip::
  This extension extends and can be used with the following extension category:


  - :ref:`envoy.filters.network <extension_category_envoy.filters.network>`



  This extension must be configured with one of the following type URLs:



  - :ref:`type.googleapis.com/envoy.extensions.filters.network.reverse_tunnel.v3.ReverseTunnel <envoy_v3_api_msg_extensions.filters.network.reverse_tunnel.v3.ReverseTunnel>`



Reverse Tunnel Network Filter :ref:`configuration overview <config_network_filters_reverse_tunnel>`.




.. _envoy_v3_api_msg_extensions.filters.network.reverse_tunnel.v3.Validation:

extensions.filters.network.reverse_tunnel.v3.Validation
-------------------------------------------------------


:repo:`[extensions.filters.network.reverse_tunnel.v3.Validation proto] <api/envoy/extensions/filters/network/reverse_tunnel/v3/reverse_tunnel.proto#L24>`

Validation configuration for reverse tunnel identifiers.
Validates the node ID and cluster ID extracted from reverse tunnel handshake headers
against expected values specified using format strings.



.. code-block:: json
  :force:

  {
    "node_id_format": ...,
    "cluster_id_format": ...,
    "emit_dynamic_metadata": ...,
    "dynamic_metadata_namespace": ...
  }

.. _envoy_v3_api_field_extensions.filters.network.reverse_tunnel.v3.Validation.node_id_format:


node_id_format
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Format string to extract the expected node identifier for validation.
  The formatted value is compared against the ``x-envoy-reverse-tunnel-node-id`` header
  from the incoming handshake request. If they do not match, the connection is rejected
  with HTTP ``403 Forbidden``.

  Supports Envoy's :ref:`command operators <config_access_log_command_operators>`:

  * ``%DYNAMIC_METADATA(namespace:key)%``: Extract expected value from dynamic metadata.
  * ``%FILTER_STATE(key)%``: Extract expected value from filter state.
  * ``%DOWNSTREAM_REMOTE_ADDRESS%``: Use downstream connection IP address.
  * Plain strings: Use a static expected value.

  If empty, node ID validation is skipped.

  Example using dynamic metadata allowlist:

  .. code-block:: yaml

     node_id_format: "%DYNAMIC_METADATA(envoy.reverse_tunnel.allowlist:expected_node_id)%"



.. _envoy_v3_api_field_extensions.filters.network.reverse_tunnel.v3.Validation.cluster_id_format:


cluster_id_format
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Format string to extract the expected cluster identifier for validation.
  The formatted value is compared against the ``x-envoy-reverse-tunnel-cluster-id`` header
  from the incoming handshake request. If they do not match, the connection is rejected
  with HTTP ``403 Forbidden``.

  Supports the same :ref:`command operators <config_access_log_command_operators>` as
  ``node_id_format``.

  If empty, cluster ID validation is skipped.

  Example using filter state:

  .. code-block:: yaml

     cluster_id_format: "%FILTER_STATE(expected_cluster_id)%"



.. _envoy_v3_api_field_extensions.filters.network.reverse_tunnel.v3.Validation.emit_dynamic_metadata:


emit_dynamic_metadata
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Whether to emit validation results as dynamic metadata.
  When enabled, the filter emits metadata under the namespace specified by
  ``dynamic_metadata_namespace`` containing:

  * ``node_id``: The actual node ID from the handshake request.
  * ``cluster_id``: The actual cluster ID from the handshake request.
  * ``validation_result``: Either ``allowed`` or ``denied``.

  This metadata can be used by subsequent filters or for access logging.
  Defaults to ``false``.


.. _envoy_v3_api_field_extensions.filters.network.reverse_tunnel.v3.Validation.dynamic_metadata_namespace:


dynamic_metadata_namespace
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Namespace for emitted dynamic metadata when ``emit_dynamic_metadata`` is ``true``.
  If not specified, defaults to ``envoy.filters.network.reverse_tunnel``.



.. _envoy_v3_api_msg_extensions.filters.network.reverse_tunnel.v3.ReverseTunnel:

extensions.filters.network.reverse_tunnel.v3.ReverseTunnel
----------------------------------------------------------


:repo:`[extensions.filters.network.reverse_tunnel.v3.ReverseTunnel proto] <api/envoy/extensions/filters/network/reverse_tunnel/v3/reverse_tunnel.proto#L86>`

Configuration for the reverse tunnel network filter.
This filter handles reverse tunnel connection acceptance and rejection by processing
HTTP requests where required identification values are provided via HTTP headers.



.. code-block:: json
  :force:

  {
    "ping_interval": {...},
    "auto_close_connections": ...,
    "request_path": ...,
    "request_method": ...,
    "validation": {...}
  }

.. _envoy_v3_api_field_extensions.filters.network.reverse_tunnel.v3.ReverseTunnel.ping_interval:


ping_interval
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) Ping interval for health checks on established reverse tunnel connections.
  If not specified, defaults to ``2 seconds``.


.. _envoy_v3_api_field_extensions.filters.network.reverse_tunnel.v3.ReverseTunnel.auto_close_connections:


auto_close_connections
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Whether to automatically close connections after processing reverse tunnel requests.

  * When set to ``true``, connections are closed after acceptance or rejection.
  * When set to ``false``, connections remain open for potential reuse.

  Defaults to ``false``.


.. _envoy_v3_api_field_extensions.filters.network.reverse_tunnel.v3.ReverseTunnel.request_path:


request_path
  (`string <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_, *REQUIRED*) HTTP path to match for reverse tunnel requests.
  If not specified, defaults to ``/reverse_connections/request``.


.. _envoy_v3_api_field_extensions.filters.network.reverse_tunnel.v3.ReverseTunnel.request_method:


request_method
  (:ref:`config.core.v3.RequestMethod <envoy_v3_api_enum_config.core.v3.RequestMethod>`) HTTP method to match for reverse tunnel requests.
  If not specified (``METHOD_UNSPECIFIED``), this defaults to ``GET``.


.. _envoy_v3_api_field_extensions.filters.network.reverse_tunnel.v3.ReverseTunnel.validation:


validation
  (:ref:`extensions.filters.network.reverse_tunnel.v3.Validation <envoy_v3_api_msg_extensions.filters.network.reverse_tunnel.v3.Validation>`) Optional validation configuration for node and cluster identifiers.
  If specified, the filter validates the ``x-envoy-reverse-tunnel-node-id`` and
  ``x-envoy-reverse-tunnel-cluster-id`` headers against expected values extracted
  using format strings. Requests that fail validation are rejected with HTTP ``403 Forbidden``.


