.. _envoy_v3_api_file_envoy/extensions/network/dns_resolver/cares/v3/cares_dns_resolver.proto:

c-ares DNS resolver (proto)
===========================

.. _extension_envoy.network.dns_resolver.cares:

This extension has the qualified name ``envoy.network.dns_resolver.cares``


.. note::
  

  This extension is intended to be robust against both untrusted downstream and
  upstream traffic.

.. tip::
  This extension extends and can be used with the following extension category:


  - :ref:`envoy.network.dns_resolver <extension_category_envoy.network.dns_resolver>`



  This extension must be configured with one of the following type URLs:



  - :ref:`type.googleapis.com/envoy.extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig <envoy_v3_api_msg_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig>`







.. _envoy_v3_api_msg_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig:

extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig
---------------------------------------------------------------


:repo:`[extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig proto] <api/envoy/extensions/network/dns_resolver/cares/v3/cares_dns_resolver.proto#L24>`

Configuration for c-ares DNS resolver.



.. code-block:: json
  :force:

  {
    "resolvers": [],
    "use_resolvers_as_fallback": ...,
    "filter_unroutable_families": ...,
    "dns_resolver_options": {...},
    "udp_max_queries": {...},
    "query_timeout_seconds": {...},
    "query_tries": {...},
    "rotate_nameservers": ...,
    "edns0_max_payload_size": {...},
    "max_udp_channel_duration": {...}
  }

.. _envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.resolvers:


resolvers
  (**repeated** :ref:`config.core.v3.Address <envoy_v3_api_msg_config.core.v3.Address>`) A list of DNS resolver addresses.
  :ref:`use_resolvers_as_fallback <envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.use_resolvers_as_fallback>`
  below dictates if the DNS client should override system defaults or only use the provided
  resolvers if the system defaults are not available, i.e., as a fallback.


.. _envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.use_resolvers_as_fallback:


use_resolvers_as_fallback
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) If true use the resolvers listed in the
  :ref:`resolvers <envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.resolvers>`
  field only if c-ares is unable to obtain a
  nameserver from the system (e.g., ``/etc/resolv.conf``).
  Otherwise, the resolvers listed in the resolvers list will override the default system
  resolvers. Defaults to false.


.. _envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.filter_unroutable_families:


filter_unroutable_families
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) The resolver will query available network interfaces and determine if there are no available
  interfaces for a given IP family. It will then filter these addresses from the results it
  presents. e.g., if there are no available IPv4 network interfaces, the resolver will not
  provide IPv4 addresses.


.. _envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.dns_resolver_options:


dns_resolver_options
  (:ref:`config.core.v3.DnsResolverOptions <envoy_v3_api_msg_config.core.v3.DnsResolverOptions>`) Configuration of DNS resolver option flags which control the behavior of the DNS resolver.


.. _envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.udp_max_queries:


udp_max_queries
  (`UInt32Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint32value>`_) This option allows the number of UDP based DNS queries to be capped.

  .. note::
    This is only applicable to c-ares DNS resolver currently.



.. _envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.query_timeout_seconds:


query_timeout_seconds
  (`UInt64Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint64value>`_) The number of seconds each name server is given to respond to a query on the first try of any given server.

  .. note::
    While the c-ares library defaults to 2 seconds, Envoy's default (if this field is unset) is 5 seconds.
    This adjustment was made to maintain the previous behavior after users reported an increase in DNS resolution times.



.. _envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.query_tries:


query_tries
  (`UInt32Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint32value>`_) The maximum number of query attempts the resolver will make before giving up.
  Each attempt may use a different name server.

  .. note::
    While the c-ares library defaults to 3 attempts, Envoy's default (if this field is unset) is 4 attempts.
    This adjustment was made to maintain the previous behavior after users reported an increase in DNS resolution times.



.. _envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.rotate_nameservers:


rotate_nameservers
  (`bool <https://developers.google.com/protocol-buffers/docs/proto#scalar>`_) Enable round-robin selection of name servers for DNS resolution. When enabled, the resolver will cycle through the
  list of name servers for each resolution request. This can help distribute the query load across multiple name
  servers. If disabled (default), the resolver will try name servers in the order they are configured.

  .. note::
    This setting overrides any system configuration for name server rotation.



.. _envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.edns0_max_payload_size:


edns0_max_payload_size
  (`UInt32Value <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#uint32value>`_) Maximum EDNS0 UDP payload size in bytes.
  If set, c-ares will include EDNS0 in DNS queries and use this value as the maximum UDP response size.

  Recommended values:

  * **1232**: Safe default (avoids fragmentation).
  * **4096**: Maximum allowed.

  If unset, c-ares uses its internal default (usually 1232).


.. _envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.max_udp_channel_duration:


max_udp_channel_duration
  (`Duration <https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration>`_) The maximum duration for which a UDP channel will be kept alive before being refreshed.

  If set, the DNS resolver will periodically reinitialize its c-ares channel after the
  specified duration. This can help with avoiding stale socket states, and providing
  better load distribution across UDP ports.

  If not specified, no periodic refresh will be performed.


